from scraping import scraping, init_driver
import argparse

scrape_accounts = [
    # Personality
    # {
    #     "user": "elonmusk",
    #     "dates": [
    #         ["2010-01-01", "2011-01-01"],
    #         ["2011-01-01", "2012-01-01"],
    #         ["2012-01-01", "2013-01-01"],
    #         ["2013-01-01", "2014-01-01"],
    #         ["2014-01-01", "2015-01-01"],
    #         ["2015-01-01", "2016-01-01"],
    #         ["2016-01-01", "2017-01-01"],
    #         ["2017-01-01", "2018-01-01"],
    #         ["2018-01-01", "2019-01-01"],
    #         ["2019-01-01", "2020-01-01"],
    #         ["2020-01-01", "2021-01-01"],
    #         ["2021-01-01", "2022-01-01"],
    #         ["2022-01-01", "2023-01-01"],
    #     ],
    #     "class": '1'
    # },
    # {
    #     "user": "billgates",
    #     "dates": [
    #         ["2009-01-01", "2010-01-01"],
    #         ["2010-01-01", "2011-01-01"],
    #         ["2011-01-01", "2012-01-01"],
    #         ["2012-01-01", "2013-01-01"],
    #         ["2013-01-01", "2014-01-01"],
    #         ["2014-01-01", "2015-01-01"],
    #         ["2015-01-01", "2016-01-01"],
    #         ["2016-01-01", "2017-01-01"],
    #         ["2017-01-01", "2018-01-01"],
    #         ["2018-01-01", "2019-01-01"],
    #         ["2019-01-01", "2020-01-01"],
    #         ["2020-01-01", "2021-01-01"],
    #         ["2021-01-01", "2022-01-01"],
    #         ["2022-01-01", "2023-01-01"]
    #     ],
    #     "class": '1'
    # },
    # {
    #     "user": "barackobama",
    #     "dates": [
    #         # ["2007-01-01", "2008-01-01"],
    #         # ["2008-01-01", "2009-01-01"],
    #         # ["2009-01-01", "2010-01-01"],
    #         # ["2010-01-01", "2011-01-01"],
    #         # ["2011-01-01", "2012-01-01"],
    #         # ["2012-01-01", "2013-01-01"],
    #         # ["2013-01-01", "2014-01-01"],
    #         ["2014-01-01", "2015-01-01"],
    #         ["2015-01-01", "2016-01-01"],
    #         ["2016-01-01", "2017-01-01"],
    #         ["2017-01-01", "2018-01-01"],
    #         ["2018-01-01", "2019-01-01"],
    #         ["2019-01-01", "2020-01-01"],
    #         ["2020-01-01", "2021-01-01"],
    #         ["2021-01-01", "2022-01-01"],
    #         ["2022-01-01", "2023-01-01"]
    #     ],
    #     "class": '1'
    # },
    # {
    #     "user": "emmanuelmacron",
    #     "dates": [
    #         ["2013-01-01", "2014-01-01"],
    #         ["2014-01-01", "2015-01-01"],
    #         ["2015-01-01", "2016-01-01"],
    #         ["2016-01-01", "2017-01-01"],
    #         ["2017-01-01", "2018-01-01"],
    #         ["2018-01-01", "2019-01-01"],
    #         ["2019-01-01", "2020-01-01"],
    #         ["2020-01-01", "2021-01-01"],
    #         ["2021-01-01", "2022-01-01"],
    #         ["2022-01-01", "2023-01-01"]
    #     ],
    #     "class": '1'
    # },
    # {
    #     "user": "sanchezcastejon",
    #     "dates": [
    #         ["2009-01-01", "2010-01-01"],
    #         ["2010-01-01", "2011-01-01"],
    #         ["2011-01-01", "2012-01-01"],
    #         ["2012-01-01", "2013-01-01"],
    #         ["2013-01-01", "2014-01-01"],
    #         ["2014-01-01", "2015-01-01"],
    #         ["2015-01-01", "2016-01-01"],
    #         ["2016-01-01", "2017-01-01"],
    #         ["2017-01-01", "2018-01-01"],
    #         ["2018-01-01", "2019-01-01"],
    #         ["2019-01-01", "2020-01-01"],
    #         ["2020-01-01", "2021-01-01"],
    #         ["2021-01-01", "2022-01-01"],
    #         ["2022-01-01", "2023-01-01"]
    #     ],
    #     "class": '1'
    # },
    # Press EN
    {
        "user": "BBCNews",
        "dates": [
            # ["2007-01-01", "2008-01-01"],
            # ["2008-01-01", "2009-01-01"],
            # ["2009-01-01", "2010-01-01"],
            # ["2010-01-01", "2011-01-01"],
            # ["2011-01-01", "2012-01-01"],
            # ["2012-01-01", "2013-01-01"],
            # ["2013-01-01", "2014-01-01"],
            # ["2014-01-01", "2015-01-01"],
            # ["2015-01-01", "2016-01-01"],
            # ["2016-01-01", "2017-01-01"],
            # ["2017-01-01", "2018-01-01"],
            # ["2018-01-01", "2019-01-01"],
            # ["2019-01-01", "2020-01-01"],
            ["2020-01-01", "2021-01-01"],
            ["2021-01-01", "2022-01-01"],
            ["2022-01-01", "2023-01-01"]
        ],
        "class": '2'
    },
    # {
    #     "user": "CNN",
    #     "dates": [
    #         ["2007-01-01", "2008-01-01"],
    #         ["2008-01-01", "2009-01-01"],
    #         ["2009-01-01", "2010-01-01"],
    #         ["2010-01-01", "2011-01-01"],
    #         ["2011-01-01", "2012-01-01"],
    #         ["2012-01-01", "2013-01-01"],
    #         ["2013-01-01", "2014-01-01"],
    #         ["2014-01-01", "2015-01-01"],
    #         ["2015-01-01", "2016-01-01"],
    #         ["2016-01-01", "2017-01-01"],
    #         ["2017-01-01", "2018-01-01"],
    #         ["2018-01-01", "2019-01-01"],
    #         ["2019-01-01", "2020-01-01"],
    #         ["2020-01-01", "2021-01-01"],
    #         ["2021-01-01", "2022-01-01"],
    #         ["2022-01-01", "2023-01-01"]
    #     ],
    #     "class": '2'
    # },
    # {
    #     "user": "nytimes",
    #     "dates": [
    #         ["2007-01-01", "2008-01-01"],
    #         ["2008-01-01", "2009-01-01"],
    #         ["2009-01-01", "2010-01-01"],
    #         ["2010-01-01", "2011-01-01"],
    #         ["2011-01-01", "2012-01-01"],
    #         ["2012-01-01", "2013-01-01"],
    #         ["2013-01-01", "2014-01-01"],
    #         ["2014-01-01", "2015-01-01"],
    #         ["2015-01-01", "2016-01-01"],
    #         ["2016-01-01", "2017-01-01"],
    #         ["2017-01-01", "2018-01-01"],
    #         ["2018-01-01", "2019-01-01"],
    #         ["2019-01-01", "2020-01-01"],
    #         ["2020-01-01", "2021-01-01"],
    #         ["2021-01-01", "2022-01-01"],
    #         ["2022-01-01", "2023-01-01"]
    #     ],
    #     "class": '2'
    # },
    # {
    #     "user": "guardian",
    #     "dates": [
    #         ["2009-01-01", "2010-01-01"],
    #         ["2010-01-01", "2011-01-01"],
    #         ["2011-01-01", "2012-01-01"],
    #         ["2012-01-01", "2013-01-01"],
    #         ["2013-01-01", "2014-01-01"],
    #         ["2014-01-01", "2015-01-01"],
    #         ["2015-01-01", "2016-01-01"],
    #         ["2016-01-01", "2017-01-01"],
    #         ["2017-01-01", "2018-01-01"],
    #         ["2018-01-01", "2019-01-01"],
    #         ["2019-01-01", "2020-01-01"],
    #         ["2020-01-01", "2021-01-01"],
    #         ["2021-01-01", "2022-01-01"],
    #         ["2022-01-01", "2023-01-01"]
    #     ],
    #     "class": '2'
    # },
    # {
    #     "user": "Reuters",
    #     "dates": [
    #         ["2007-01-01", "2008-01-01"],
    #         ["2008-01-01", "2009-01-01"],
    #         ["2009-01-01", "2010-01-01"],
    #         ["2010-01-01", "2011-01-01"],
    #         ["2011-01-01", "2012-01-01"],
    #         ["2012-01-01", "2013-01-01"],
    #         ["2013-01-01", "2014-01-01"],
    #         ["2014-01-01", "2015-01-01"],
    #         ["2015-01-01", "2016-01-01"],
    #         ["2016-01-01", "2017-01-01"],
    #         ["2017-01-01", "2018-01-01"],
    #         ["2018-01-01", "2019-01-01"],
    #         ["2019-01-01", "2020-01-01"],
    #         ["2020-01-01", "2021-01-01"],
    #         ["2021-01-01", "2022-01-01"],
    #         ["2022-01-01", "2023-01-01"]
    #     ],
    #     "class": '2'
    # },
    # Press FR

]


def main():
    print(f'Scraping from {start} to {end} for {from_account}')
    driver = init_driver(headless=headless, show_images=False, env="fj.env")
    data = scraping(start, until=end, interval=1, from_account=from_account,
                    save_dir=f"../data/scraping/{from_account}", driver=driver, env=env, headless=headless,
                    only_id=False, Class=class_)

    driver.close()
    driver.quit()


if __name__ == "__main__":
    parser = argparse.ArgumentParser(description='Scraping Twitter')

    parser.add_argument('--start', type=str, help='Start date', required=True)
    parser.add_argument('--end', type=str, help='End date', required=True)
    parser.add_argument('--interval', type=int, help='Interval', default=1)
    parser.add_argument('--from_account', type=str, help='From account', required=True)
    parser.add_argument('--env', type=str, help='Environment file with Chrome driver path and Twitter credentials',
                        required=True)
    parser.add_argument('--headless', type=bool, help='Headless', default=False)
    parser.add_argument('--class_', type=str, help='Class', default='1')

    env = parser.parse_args().env
    start = parser.parse_args().start
    end = parser.parse_args().end
    interval = parser.parse_args().interval
    from_account = parser.parse_args().from_account
    headless = parser.parse_args().headless
    class_ = parser.parse_args().class_

    args = parser.parse_args()

    main()
